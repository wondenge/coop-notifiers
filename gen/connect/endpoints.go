// Code generated by goa v3.1.3, DO NOT EDIT.
//
// connect endpoints
//
// Command:
// $ goa gen github.com/wondenge/coop-notifiers/design

package connect

import (
	"context"

	"github.com/go-kit/kit/endpoint"
)

// Endpoints wraps the "connect" service endpoints.
type Endpoints struct {
	IFTAccountToAccount   endpoint.Endpoint
	PesaLinkSendToAccount endpoint.Endpoint
	PesaLinkSendToPhone   endpoint.Endpoint
	SendToMPesa           endpoint.Endpoint
}

// NewEndpoints wraps the methods of the "connect" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		IFTAccountToAccount:   NewIFTAccountToAccountEndpoint(s),
		PesaLinkSendToAccount: NewPesaLinkSendToAccountEndpoint(s),
		PesaLinkSendToPhone:   NewPesaLinkSendToPhoneEndpoint(s),
		SendToMPesa:           NewSendToMPesaEndpoint(s),
	}
}

// Use applies the given middleware to all the "connect" service endpoints.
func (e *Endpoints) Use(m func(endpoint.Endpoint) endpoint.Endpoint) {
	e.IFTAccountToAccount = m(e.IFTAccountToAccount)
	e.PesaLinkSendToAccount = m(e.PesaLinkSendToAccount)
	e.PesaLinkSendToPhone = m(e.PesaLinkSendToPhone)
	e.SendToMPesa = m(e.SendToMPesa)
}

// NewIFTAccountToAccountEndpoint returns an endpoint function that calls the
// method "IFTAccountToAccount" of service "connect".
func NewIFTAccountToAccountEndpoint(s Service) endpoint.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*IFTAccountToAccountCallbackRequest)
		return s.IFTAccountToAccount(ctx, p)
	}
}

// NewPesaLinkSendToAccountEndpoint returns an endpoint function that calls the
// method "PesaLinkSendToAccount" of service "connect".
func NewPesaLinkSendToAccountEndpoint(s Service) endpoint.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*PesaLinkSendToAccountCallbackRequest)
		return s.PesaLinkSendToAccount(ctx, p)
	}
}

// NewPesaLinkSendToPhoneEndpoint returns an endpoint function that calls the
// method "PesaLinkSendToPhone" of service "connect".
func NewPesaLinkSendToPhoneEndpoint(s Service) endpoint.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*PesaLinkSendToPhoneCallbackRequest)
		return s.PesaLinkSendToPhone(ctx, p)
	}
}

// NewSendToMPesaEndpoint returns an endpoint function that calls the method
// "SendToMPesa" of service "connect".
func NewSendToMPesaEndpoint(s Service) endpoint.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*SendToMpesaCallbackRequest)
		return s.SendToMPesa(ctx, p)
	}
}
