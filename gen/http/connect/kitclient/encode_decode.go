// Code generated by goa v3.1.3, DO NOT EDIT.
//
// connect go-kit HTTP client encoders and decoders
//
// Command:
// $ goa gen github.com/wondenge/coop-notifiers/design

package client

import (
	"context"
	"net/http"

	kithttp "github.com/go-kit/kit/transport/http"
	"github.com/wondenge/coop-notifiers/gen/http/connect/client"
	goahttp "goa.design/goa/v3/http"
)

// EncodeIFTAccountToAccountRequest returns a go-kit EncodeRequestFunc suitable
// for encoding connect IFTAccountToAccount requests.
func EncodeIFTAccountToAccountRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeIFTAccountToAccountRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeIFTAccountToAccountResponse returns a go-kit DecodeResponseFunc
// suitable for decoding connect IFTAccountToAccount responses.
func DecodeIFTAccountToAccountResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeIFTAccountToAccountResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodePesaLinkSendToAccountRequest returns a go-kit EncodeRequestFunc
// suitable for encoding connect PesaLinkSendToAccount requests.
func EncodePesaLinkSendToAccountRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodePesaLinkSendToAccountRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodePesaLinkSendToAccountResponse returns a go-kit DecodeResponseFunc
// suitable for decoding connect PesaLinkSendToAccount responses.
func DecodePesaLinkSendToAccountResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodePesaLinkSendToAccountResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodePesaLinkSendToPhoneRequest returns a go-kit EncodeRequestFunc suitable
// for encoding connect PesaLinkSendToPhone requests.
func EncodePesaLinkSendToPhoneRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodePesaLinkSendToPhoneRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodePesaLinkSendToPhoneResponse returns a go-kit DecodeResponseFunc
// suitable for decoding connect PesaLinkSendToPhone responses.
func DecodePesaLinkSendToPhoneResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodePesaLinkSendToPhoneResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}

// EncodeSendToMPesaRequest returns a go-kit EncodeRequestFunc suitable for
// encoding connect SendToMPesa requests.
func EncodeSendToMPesaRequest(encoder func(*http.Request) goahttp.Encoder) kithttp.EncodeRequestFunc {
	enc := client.EncodeSendToMPesaRequest(encoder)
	return func(_ context.Context, r *http.Request, v interface{}) error {
		return enc(r, v)
	}
}

// DecodeSendToMPesaResponse returns a go-kit DecodeResponseFunc suitable for
// decoding connect SendToMPesa responses.
func DecodeSendToMPesaResponse(decoder func(*http.Response) goahttp.Decoder) kithttp.DecodeResponseFunc {
	dec := client.DecodeSendToMPesaResponse(decoder, false)
	return func(ctx context.Context, resp *http.Response) (interface{}, error) {
		return dec(resp)
	}
}
